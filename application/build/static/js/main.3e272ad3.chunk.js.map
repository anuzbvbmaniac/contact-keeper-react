{"version":3,"sources":["context/auth/authContext.js","context/contact/contactContext.js","components/layout/Navbar.js","components/contacts/ContactItem.js","components/layout/Spinner.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/pages/Home.js","components/pages/About.js","context/types.js","context/contact/contactReducer.js","context/contact/ContactState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertContext.js","components/auth/Register.js","components/auth/Login.js","context/alert/alertReducer.js","context/alert/AlertState.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","App.js","index.js"],"names":["AuthContext","createContext","ContactContext","Navbar","authContext","useContext","contactContext","isAuthenticated","logout","user","clearContacts","onLogout","authLinks","className","as","open","Button","name","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","to","href","onClick","guestLinks","src","alt","aria-hidden","Panel","defaultProps","title","icon","ContactItem","contact","deleteContact","setCurrent","clearCurrent","_id","email","phone","type","charAt","toUpperCase","slice","Spinner","Contacts","contacts","filtered","getContacts","loading","useEffect","length","map","ContactForm","addContact","current","updateContact","setContact","useState","onChange","event","target","value","clearAll","onSubmit","preventDefault","htmlFor","id","placeholder","checked","Home","loadUser","About","GET_CONTACTS","ADD_CONTACT","FILTER_CONTACTS","UPDATE_CONTACT","DELETE_CONTACT","CLEAR_CONTACTS","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","CONTACT_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT","CLEAR_ERRORS","contactReducer","state","action","payload","filter","error","regex","RegExp","match","ContactState","props","useReducer","dispatch","a","axios","get","response","data","msg","config","headers","post","put","delete","console","log","message","Provider","filterContacts","keywords","clearFilter","children","authReducer","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","register","formData","login","clearErrors","AlertContext","Register","alertContext","setAlert","history","push","password","password_confirmation","setUser","required","autoComplete","minLength","Login","alertReducer","alert","AlertState","alerts","timeout","uuid","v4","setTimeout","removeAlert","Alerts","PrivateRoute","Component","component","rest","render","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e272ad3.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n","import {createContext} from 'react';\r\n\r\nconst ContactContext = createContext();\r\n\r\nexport default ContactContext;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport { BellIcon, MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport { Disclosure, Menu, Transition } from \"@headlessui/react\";\r\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";\r\n\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const contactContext = useContext(ContactContext);\r\n\r\n    const { isAuthenticated, logout, user } = authContext;\r\n    const { clearContacts } = contactContext;\r\n\r\n    const onLogout = () => {\r\n        logout();\r\n        clearContacts();\r\n    }\r\n\r\n    const authLinks = (\r\n        <div className=\"hidden md:block\">\r\n            <div className=\"ml-4 flex items-center md:ml-6\">\r\n\r\n                {/* Profile dropdown */}\r\n                <Menu as=\"div\" className=\"ml-3 relative\">\r\n                    {({ open }) => (\r\n                        <>\r\n                            <div>\r\n                                <Menu.Button className=\"max-w-xs flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white\">\r\n                                    <span className=\"sr-only\">Open user menu</span>\r\n                                    <p>{user && user.name} <ChevronDownIcon className=\"w-5 h-5 float-right\"/></p>\r\n                                </Menu.Button>\r\n                            </div>\r\n                            <Transition\r\n                                show={open}\r\n                                as={Fragment}\r\n                                enter=\"transition ease-out duration-100\"\r\n                                enterFrom=\"transform opacity-0 scale-95\"\r\n                                enterTo=\"transform opacity-100 scale-100\"\r\n                                leave=\"transition ease-in duration-75\"\r\n                                leaveFrom=\"transform opacity-100 scale-100\"\r\n                                leaveTo=\"transform opacity-0 scale-95\"\r\n                            >\r\n                                <Menu.Items\r\n                                    static\r\n                                    className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                                >\r\n                                    <Link\r\n                                        to=\"/\"\r\n                                        className={'block px-4 py-2 text-sm text-gray-700'}\r\n                                    >\r\n                                        Profile\r\n                                    </Link>\r\n                                    <a\r\n                                        href=\"#!\"\r\n                                        onClick={onLogout}\r\n                                        className={'block px-4 py-2 text-sm text-gray-700'}\r\n                                    >\r\n                                        Logout\r\n                                    </a>\r\n                                </Menu.Items>\r\n                            </Transition>\r\n                        </>\r\n                    )}\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <>\r\n            <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\r\n                <Link\r\n                    to={'/login'}\r\n                    className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\"\r\n                >\r\n                    Sign in\r\n                </Link>\r\n                <Link\r\n                    to={'/register'}\r\n                    className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n                >\r\n                    Sign up\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <Disclosure as=\"nav\" className=\"bg-white\">\r\n            {({ open }) => (\r\n                <>\r\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                        <div className=\"flex items-center justify-between h-16\">\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                    <img\r\n                                        className=\"h-8 w-8\"\r\n                                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                                        alt=\"Workflow\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"hidden md:block\">\r\n                                    <div className=\"ml-10 flex items-baseline space-x-4\">\r\n                                        <Link\r\n                                            to=\"/\"\r\n                                            className=\"text-indigo-700 px-3 py-2 rounded-md text-sm font-medium\"\r\n                                        >\r\n                                            Home\r\n                                        </Link>\r\n                                        <Link\r\n                                            to=\"/about\"\r\n                                            className=\"text-gray-400 hover:text-indigo-700 px-3 py-2 rounded-md text-sm font-medium\"\r\n                                        >\r\n                                            About\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {isAuthenticated ? authLinks : guestLinks}\r\n\r\n\r\n                            <div className=\"-mr-2 flex md:hidden\">\r\n                                {/* Mobile menu button */}\r\n                                <Disclosure.Button className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                                    <span className=\"sr-only\">Open main menu</span>\r\n                                    {open ? (\r\n                                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    ) : (\r\n                                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    )}\r\n                                </Disclosure.Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Disclosure.Panel className=\"md:hidden\">\r\n                        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\r\n                            <Link\r\n                                to=\"/\"\r\n                                className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                            >\r\n                                Home\r\n                            </Link>\r\n                            <Link\r\n                                to=\"/about\"\r\n                                className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                            >\r\n                                About\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"pt-4 pb-3 border-t border-gray-700\">\r\n                            <div className=\"flex items-center px-5\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                    <img\r\n                                        className=\"h-10 w-10 rounded-full\"\r\n                                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <div className=\"text-base font-medium leading-none text-white\">Tom Cook</div>\r\n                                    <div className=\"text-sm font-medium leading-none text-gray-400\">tom@example.com</div>\r\n                                </div>\r\n                                <button className=\"ml-auto bg-gray-800 flex-shrink-0 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"mt-3 px-2 space-y-1\">\r\n                                <Link\r\n                                    to=\"/\"\r\n                                    className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\"\r\n                                >\r\n                                    Profile\r\n                                </Link>\r\n\r\n                                <Link\r\n                                    to=\"/\"\r\n                                    className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\"\r\n                                >\r\n                                    Settings\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Disclosure.Panel>\r\n                </>\r\n            )}\r\n        </Disclosure>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Contact Keeper',\r\n    icon: 'fas fa-id-card-alt'\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nimport { PencilAltIcon, TrashIcon, MailIcon, PhoneIcon } from \"@heroicons/react/solid\";\r\n\r\nconst ContactItem = ({ contact }) => {\r\n\r\n    const contactContext = useContext(ContactContext);\r\n    const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n\r\n    const { _id, name, email, phone, type } = contact;\r\n\r\n    const onDelete = () => {\r\n        deleteContact(_id);\r\n        clearCurrent();\r\n    }\r\n\r\n    return (\r\n        <li className=\"col-span-1 bg-white rounded-lg shadow divide-y divide-gray-200 mb-3\">\r\n            <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\r\n                <div className=\"flex-1 truncate\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <h3 className=\"text-gray-900 text-lg font-bold truncate\">{name}</h3>\r\n                        <span className={'flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full ' + (type === 'professional' ? 'text-green-800 bg-green-100' : 'text-red-800 bg-red-100')}>\r\n                          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {email && (<p className=\"mt-1 text-gray-500 text-sm truncate\">\r\n                        <MailIcon className=\"w-5 h-5 text-gray-500 float-left mr-2\" aria-hidden=\"true\"/>{email}\r\n                    </p>)}\r\n\r\n                    {phone && (<p className=\"mt-1 text-gray-500 text-sm truncate\">\r\n                        <PhoneIcon className=\"w-5 h-5 text-gray-500 float-left mr-2\" aria-hidden=\"true\"/>{phone}\r\n                    </p>)}\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"-mt-px flex divide-x divide-gray-200\">\r\n                    <div className=\"w-0 flex-1 flex\">\r\n                        <button\r\n                            onClick={() => setCurrent(contact)}\r\n                            className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-3 text-sm text-gray-700 font-medium border border-green-500 rounded-bl-lg bg-green-500 hover:bg-green-600 focus:outline-none\"\r\n                        >\r\n                            <PencilAltIcon className=\"w-5 h-5 text-white\" aria-hidden=\"true\"/>\r\n                            <span className=\"ml-3 text-white\">Edit</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"-ml-px w-0 flex-1 flex\">\r\n                        <button\r\n                            onClick={onDelete}\r\n                            className=\"relative w-0 flex-1 inline-flex items-center justify-center py-3 text-sm text-gray-700 font-medium border border-red-500 rounded-br-lg hover:text-gray-500 bg-red-500 hover:bg-red-600 focus:outline-none\"\r\n                        >\r\n                            <TrashIcon className=\"w-5 h-5 text-white\" aria-hidden=\"true\"/>\r\n                            <span className=\"ml-3 text-white\">Delete</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 w-full h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center\">\r\n            <div className=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4\"/>\r\n            <h2 className=\"text-center text-white text-xl font-semibold\">Loading...</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItem from \"./ContactItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Contacts = () => {\r\n\r\n    const contactContext = useContext(ContactContext);\r\n\r\n    const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (contacts !== null && contacts.length === 0 && !loading) return (\r\n        <div className=\"mt-5 md:mt-0\">\r\n            <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\r\n                <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\r\n                    <h1>No Contacts found. Please add a contact.</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {contacts !== null && !loading ? (\r\n                <div className=\"mt-5 md:mt-0\">\r\n                    <ul className=\"grid\">\r\n                        {filtered !== null\r\n                            ? filtered.map((contact) => (\r\n                                <ContactItem contact={contact} key={contact._id}/>\r\n                            ))\r\n                            : contacts.map((contact) => (\r\n                                <ContactItem contact={contact} key={contact._id}/>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            ) : <Spinner/>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst ContactForm = () => {\r\n\r\n    const contactContext = useContext(ContactContext);\r\n\r\n    const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n    useEffect(() => {\r\n        if(current !== null) {\r\n            setContact(current);\r\n        } else {\r\n            setContact({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            }); // Empty the previous form values\r\n        }\r\n    }, [contactContext, current]);\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    });\r\n\r\n    const { name, email, phone, type } = contact;\r\n\r\n    const onChange = event => setContact({\r\n        ...contact,\r\n        [event.target.name] : event.target.value\r\n    });\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (current === null) {\r\n            addContact(contact);\r\n        } else {\r\n            updateContact(contact)\r\n        }\r\n        clearAll();\r\n    }\r\n\r\n    // Clear current state values, resulting, clearing Input Fields values\r\n    const clearAll = () => {\r\n        clearCurrent();\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-5 md:mt-0\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\r\n                    <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\r\n\r\n                        <h1 className=\"order-1 text-gray-900 text-3xl font-extrabold tracking-tight\">{current ? 'Edit Contact' : 'Add Contact'}</h1>\r\n\r\n                        <div className=\"grid\">\r\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Name\r\n                            </label>\r\n                            <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\r\n                                    placeholder=\"John Doe\"\r\n                                    value={name}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid\">\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Email\r\n                            </label>\r\n                            <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\r\n                                    placeholder=\"example@mail.com\"\r\n                                    value={email}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid\">\r\n                            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Phone Number\r\n                            </label>\r\n                            <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    id=\"phone\"\r\n                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\r\n                                    placeholder=\"XXXX-XXX-XXX\"\r\n                                    value={phone}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid\">\r\n                            <div>\r\n                                <legend className=\"block text-sm font-medium text-gray-700\">Contact Type</legend>\r\n                            </div>\r\n                            <div className=\"mt-4 flex flex-row\">\r\n                                <div className=\"flex items-center mr-4\">\r\n                                    <input\r\n                                        id=\"push_everything\"\r\n                                        name=\"type\"\r\n                                        type=\"radio\"\r\n                                        className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\r\n                                        value={'personal'}\r\n                                        checked={type === 'personal'}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label htmlFor=\"push_everything\" className=\"ml-3 block text-sm font-medium text-gray-700\">\r\n                                        Personal\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"flex items-center\">\r\n                                    <input\r\n                                        id=\"push_email\"\r\n                                        name=\"type\"\r\n                                        type=\"radio\"\r\n                                        className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\r\n                                        value={'professional'}\r\n                                        checked={type === 'professional'}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label htmlFor=\"push_email\" className=\"ml-3 block text-sm font-medium text-gray-700\">\r\n                                        Professional\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"px-4 py-3 bg-gray-50 sm:px-6\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        >\r\n                            {current ? 'Update Contact' : 'Add Contact'}\r\n                        </button>\r\n                        {current && <button\r\n                            className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                            onClick={clearAll}\r\n                        >\r\n                            Clear\r\n                        </button>}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Contacts from \"../contacts/Contacts\";\r\nimport ContactForm from \"../contacts/ContactForm\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst Home = () => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        authContext.loadUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'max-w-7xl mx-auto py-12 sm:px-6 lg:px-8'}>\r\n            <div className={'grid grid-cols-2 gap-6'}>\r\n                <ContactForm/>\r\n                <Contacts/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"bg-white max-w-7xl mx-auto py-12 sm:px-6 lg:px-8 mt-12 rounded-lg\">\r\n            <div className=\"max-w-7xl mx-auto py-12 px-4 sm:py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-base font-semibold text-indigo-600 tracking-wide uppercase\">About Us</h2>\r\n                    <p className=\"mt-3 text-3xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-5xl\">\r\n                        The Best Way to Maintain Your Contacts\r\n                    </p>\r\n                    <p className=\"max-w-xl mt-5 mx-auto text-xl text-gray-500\">\r\n                        Intuitive contact management for individuals, teams & small businesses.\r\n                    </p>\r\n                    <p className=\"w-1/6 mt-5 mx-auto text-sm text-white bg-green-500 p-1 rounded\">\r\n                        Version: 1.0.0 (beta)\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const CLEAR_CONTACTS = 'CLEAR_CONTACTS';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\nexport const CONTACT_ERROR = 'CONTACT_ERROR';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import { FILTER_CONTACTS, ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from \"../types\";\r\n\r\nconst contactReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload,\r\n                loading: false\r\n            }\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts],\r\n                loading: false\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.payload),\r\n                loading: false\r\n            }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\r\n                loading: false\r\n            }\r\n        case CLEAR_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: null,\r\n                filtered: null,\r\n                error: null,\r\n                current: null,\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload,\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null,\r\n            }\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi'); // Regular Expression (gi == global, insensitive (!case-sensitive)\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                }),\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null,\r\n            }\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default contactReducer;\r\n","import React, { useReducer } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\n\r\nimport { ADD_CONTACT, CLEAR_CONTACTS, CLEAR_CURRENT, CLEAR_FILTER, CONTACT_ERROR, DELETE_CONTACT, FILTER_CONTACTS, GET_CONTACTS, SET_CURRENT, UPDATE_CONTACT } from \"../types\";\r\n\r\nconst ContactState = props => {\r\n\r\n    const initialState = {\r\n        contacts: null,\r\n        current: null,\r\n        filtered: null,\r\n        error: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    // Get Contacts\r\n    const getContacts = async () => {\r\n        try {\r\n            const response = await axios.get('/api/contacts');\r\n\r\n            dispatch({\r\n                type: GET_CONTACTS,\r\n                payload: response.data\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Add Contact\r\n    const addContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('/api/contacts', contact, config);\r\n\r\n            dispatch({\r\n                type: ADD_CONTACT,\r\n                payload: response.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Update Contact\r\n    const updateContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`api/contacts/${contact._id}`, contact, config);\r\n            dispatch({\r\n                type: UPDATE_CONTACT,\r\n                payload: response.data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Delete Contact\r\n    const deleteContact = async id => {\r\n        try {\r\n            const response = await axios.delete(`/api/contacts/${id}`);\r\n\r\n            dispatch({\r\n                type: DELETE_CONTACT,\r\n                payload: id,\r\n            });\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    // Clear Contacts\r\n    const clearContacts = () => {\r\n        dispatch({\r\n            type: CLEAR_CONTACTS\r\n        });\r\n    }\r\n\r\n    // Set Current Contact\r\n    const setCurrent = contact => {\r\n        dispatch({\r\n            type: SET_CURRENT,\r\n            payload: contact,\r\n        });\r\n    }\r\n\r\n    // Clear Current Contact\r\n    const clearCurrent = () => {\r\n        dispatch({\r\n            type: CLEAR_CURRENT,\r\n        });\r\n    }\r\n\r\n    // Filter Contact\r\n    const filterContacts = keywords => {\r\n        dispatch({\r\n            type: FILTER_CONTACTS,\r\n            payload: keywords,\r\n        });\r\n    }\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({\r\n            type: CLEAR_FILTER,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ContactContext.Provider value={{\r\n            contacts: state.contacts,\r\n            current: state.current,\r\n            filtered: state.filtered,\r\n            error: state.error,\r\n            getContacts,\r\n            addContact,\r\n            deleteContact,\r\n            clearContacts,\r\n            setCurrent,\r\n            clearCurrent,\r\n            updateContact,\r\n            filterContacts,\r\n            clearFilter,\r\n        }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ContactState;\r\n\r\n\r\n","import { AUTH_ERROR, CLEAR_ERRORS, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED } from '../types';\r\n\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: action.payload,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            }\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;\r\n","import React, { useReducer } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport { AUTH_ERROR, CLEAR_ERRORS, LOGIN_SUCCESS, LOGOUT, REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED } from \"../types\";\r\n\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\n\r\nconst AuthState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: null,\r\n        loading: true,\r\n        error: null,\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Load User\r\n    const loadUser = async () => {\r\n\r\n        if (localStorage.token) {\r\n            setAuthToken(localStorage.token)\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('/api/auth');\r\n\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: response.data,\r\n            });\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        }\r\n    }\r\n\r\n    // Register User\r\n    const register = async (formData) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.post('/api/users', formData, config);\r\n\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: response.data,\r\n            });\r\n            await loadUser();\r\n        } catch (err) {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n                payload: err.response.data.msg,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // Login User\r\n    const login = async (formData) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('/api/auth', formData, config);\r\n\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: response.data\r\n            });\r\n\r\n            loadUser();\r\n        } catch (err) {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n                payload: err.response.data.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Logout\r\n    const logout = () => {\r\n        dispatch({\r\n            type: LOGOUT,\r\n        });\r\n    }\r\n\r\n    // Clear Errors\r\n    const clearErrors = () => {\r\n        dispatch({\r\n            type: CLEAR_ERRORS\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            token: state.token,\r\n            isAuthenticated: state.isAuthenticated,\r\n            loading: state.loading,\r\n            user: state.user,\r\n            error: state.error,\r\n            register,\r\n            loadUser,\r\n            login,\r\n            logout,\r\n            clearErrors,\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthState;\r\n","import {createContext} from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst Register = (props) => {\r\n\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { setAlert } = alertContext;\r\n    const { register, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            props.history.push('/');\r\n        }\r\n\r\n        if (error === 'User already exists.') {\r\n            setAlert(error, 'danger');\r\n            clearErrors();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [error, isAuthenticated, props.history])\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password_confirmation: ''\r\n    });\r\n\r\n    const { name, email, password, password_confirmation } = user;\r\n\r\n    const onChange = (event) => {\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (name === '' || email === '' || password === '') {\r\n            setAlert('Please enter all fields', 'danger');\r\n        } else if (password !== password_confirmation) {\r\n            setAlert('Password didnt match', 'danger');\r\n        } else {\r\n            register({\r\n                name, email, password\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 py-8 flex-col justify-center\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-0 text-center text-3xl font-extrabold text-gray-900\">Sign up</h2>\r\n                <p className=\"mt-2 font-medium text-indigo-600 hover:text-indigo-500 text-center text-sm\">\r\n                    Please fill in the required fields.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <form className=\"space-y-6\" onSubmit={onSubmit}>\r\n                        <div>\r\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Full Name\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={name}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Email address\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={email}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Password\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    required\r\n                                    minLength=\"6\"\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={password}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"password_confirmation\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Confirm Password\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"password_confirmation\"\r\n                                    name=\"password_confirmation\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    minLength=\"6\"\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={password_confirmation}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center\">\r\n                                <input\r\n                                    id=\"remember_me\"\r\n                                    name=\"remember_me\"\r\n                                    type=\"checkbox\"\r\n                                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                />\r\n                                <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"text-sm\">\r\n                                <Link to='/login' className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                    Forgot your password?\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                Sign up\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const alertContext = useContext(AlertContext);\r\n\r\n    const { setAlert } = alertContext;\r\n    const { login, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            props.history.push('/');\r\n        }\r\n\r\n        if (error === 'Invalid email address. User not found.') {\r\n            setAlert(error, 'danger');\r\n            clearErrors();\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [error, isAuthenticated, props.history]);\r\n\r\n\r\n\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = user;\r\n\r\n    const onChange = (event) => {\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (email === '' || password === '') {\r\n            setAlert('Please fill in all fields.', 'danger');\r\n        } else {\r\n            login({\r\n                email,\r\n                password\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 py-12 flex-col justify-center\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-0 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n                <p className=\"mt-2 font-medium text-indigo-600 hover:text-indigo-500 text-center text-sm\">\r\n                    Please fill in the required fields.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <form className=\"space-y-6\" onSubmit={onSubmit}>\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Email address\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={email}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Password\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    value={password}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center\">\r\n                                <input\r\n                                    id=\"remember_me\"\r\n                                    name=\"remember_me\"\r\n                                    type=\"checkbox\"\r\n                                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                />\r\n                                <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"text-sm\">\r\n                                <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                    Forgot your password?\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                Sign in\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { REMOVE_ALERT, SET_ALERT } from '../types';\r\n\r\nconst alertReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [\r\n                ...state, action.payload\r\n            ]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default alertReducer;\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nimport alertReducer from \"./alertReducer\";\r\nimport AlertContext from \"./alertContext\";\r\nimport { REMOVE_ALERT, SET_ALERT } from \"../types\";\r\n\r\nconst AlertState = props => {\r\n\r\n    const initialState = [];\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n    // Set Alerts\r\n    const setAlert = (msg, type, timeout = 5000) => {\r\n        const id = uuid.v4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n\r\n        setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout);\r\n    }\r\n\r\n    // Remove Alert\r\n    const removeAlert = (id) => {\r\n        dispatch({\r\n            type: REMOVE_ALERT,\r\n            payload: id,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            alerts: state,\r\n            setAlert,\r\n            removeAlert,\r\n        }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AlertState;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport { CheckCircleIcon, XIcon, XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\nconst Alerts = () => {\r\n\r\n    const alertContext = useContext(AlertContext);\r\n\r\n    return (\r\n        alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\r\n            <>\r\n                <div className=\"flex justify-center pt-6\" key={alert.id}>\r\n                    <div className={`rounded-md bg-${alert.type === 'danger' ? 'red-50' : 'green-50'} p-4 w-1/2`}>\r\n                        <div className=\"flex\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                {alert.type === 'success'\r\n                                    ? (<CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\"/>)\r\n                                    : (<XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\"/>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"ml-3\">\r\n                                <p className={`text-sm font-medium text-${alert.type === 'danger' ? 'red-800' : 'green-800'}`}>There are {alertContext.alerts.length} errors with your submission.</p>\r\n\r\n                                <ul className=\"list-disc pl-5 space-y-1 mt-2 text-sm text-red-700\">\r\n                                    <li>{alert.msg}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"ml-auto pl-3\">\r\n                                <div className=\"-mx-1.5 -my-1.5\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className={`inline-flex bg-${alert.type === 'danger' ? 'red-50' : 'green-50'} rounded-md p-1.5 text-${alert.type === 'danger' ? 'red-500' : 'green-500'} hover:bg-${alert.type === 'danger' ? 'red-100' : 'green-100'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-${alert.type === 'danger' ? 'red-50' : 'green-50'} focus:ring-${alert.type === 'danger' ? 'red-600' : 'green-600'}`}\r\n                                        onClick={() => alertContext.removeAlert(alert.id)}\r\n                                    >\r\n                                        <span className=\"sr-only\">Dismiss</span>\r\n                                        <XIcon className=\"h-5 w-5\" aria-hidden=\"true\"/>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        ))\r\n    );\r\n};\r\n\r\nexport default Alerts;\r\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { isAuthenticated, loading } = authContext;\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => !isAuthenticated && !loading\r\n                ? <Redirect to='/login'/>\r\n                : <Component {...props} />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport './assets/css/tailwind.css';\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport ContactState from \"./context/contact/ContactState\";\nimport AuthState from \"./context/auth/AuthState\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport AlertState from \"./context/alert/AlertState\";\nimport Alerts from \"./components/layout/Alerts\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n    return (\n        <AuthState>\n            <ContactState>\n                <AlertState>\n                    <Router>\n                        <div>\n                            <Navbar/>\n                            <main className={'bg-gray-50'}>\n                                <Alerts/>\n                                <Switch>\n                                    <PrivateRoute exact path={'/'} component={Home}/>\n                                    <Route exact path={'/about'} component={About}/>\n                                    <Route exact path={'/register'} component={Register}/>\n                                    <Route exact path={'/login'} component={Login}/>\n                                </Switch>\n                            </main>\n                        </div>\n                    </Router>\n                </AlertState>\n            </ContactState>\n        </AuthState>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}